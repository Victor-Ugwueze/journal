# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
version: 2
defaults: &defaults
  docker:  
    - image: gcr.io/my-comp-eng/journal-api:v1.0
      auth:
        username: _json_key
        password: $GCLOUD_SERVICE_KEY
      environment:
        NODE_ENV: test
        DATABASE_URL: postgres://root@localhost/journal_dev_test
    - image: postgres:9.6-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: journal_dev_test
  working_directory: ~/journal-backend

install_npm_packages: &install_npm_packages
  run:
    name: Install Npm Dependencies
    command: yarn install

attach_workspace: &attach_workspace
  attach_workspace:
    at: ~/journal-backend

persist_to_workspace: &persist_to_workspace
  persist_to_workspace:
    root: .
    paths: .

jobs:
  checkout_code:
    <<: *defaults
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: ls -l ~/journal-backend/node_modules

      - *install_npm_packages

      - save_cache:
        name: Save Yarn Package Cache
        key: yarn-packages-{{ checksum "yarn.lock" }}
        paths:
          - ~/.cache/yarn
          - node_modules
      - *persist_to_workspace

  test_and_report:
    <<: *defaults
    steps:
      - checkout
      - *install_npm_packages
      - run:
          name: Install code climate test reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Wait for postgres to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Checkout to staging and run migrations
          command: |
            git checkout staging
            yarn db:migrate
      - run:
          name: Run journal test suites
          command: |
            ./cc-test-reporter before-build
            yarn test --coverage
            ./cc-test-reporter after-build --exit-code $?
  build_application_artifacts:
    <<: *defaults
    steps:
      - *install_npm_packages
      - run: yarn run build

workflows:
  version: 2
  test_build_deploy:
    jobs:
      - checkout_code:
          type: approval
      - test_and_report:
          requires:
            - checkout_code
      - build_application_artifacts:
          requires:
            - test_and_report
            - checkout_code