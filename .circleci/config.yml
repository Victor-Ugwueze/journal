# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/repo
    docker:
      # specify the version you desire here
      - image: circleci/node:10.16.0
        environment:
           PGHOST: localhost
           PGUSER: postgres
           NODE_ENV: production
           dialect: postgres
           NOT_NAME: lol
           DATABASE_URL: "postgres://postgres:postgres@localhost:5432/population-m-s-test"
      
      - image: circleci/postgres:11
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: population-m-s-test
          dialect: postgres
          POSTGRES_PASSWORD: postgres
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    

    steps:
      - checkout

    #   # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: 
          npm install

      - run:
          name: Waiting for PostgreSQL to start
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 2
            done
            echo Failed waiting for Postgres && exit 1
      
      # - run:
      #     name: INSTALL PG CLIENT
      #     command: sudo apt install -y postgresql-client || true
      - run: sudo apt-get update
      - run: sudo apt install -y postgresql-client || true
      # - run: createdb population-m-s-test

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run buld
      - run: npm test
      # - run: npm coverage
